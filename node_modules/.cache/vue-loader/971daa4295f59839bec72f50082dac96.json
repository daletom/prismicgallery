{"remainingRequest":"/Users/tom/Documents/GitHub/prismicgallery/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tom/Documents/GitHub/prismicgallery/src/views/Imagegallery.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/tom/Documents/GitHub/prismicgallery/src/views/Imagegallery.vue","mtime":1565126120473},{"path":"/Users/tom/Documents/GitHub/prismicgallery/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tom/Documents/GitHub/prismicgallery/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/tom/Documents/GitHub/prismicgallery/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tom/Documents/GitHub/prismicgallery/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  name: 'Imagegallery',\n  data () {\n    return {\n      documentId: '',\n      fields: {\n        title: null,\n        description: null,\n        ctaLink: null,\n        ctaText: null,\n        icon: null\n      }\n    }\n  },\n  methods: {\n    getContent (uid) {\n      this.$prismic.client.getByUID('imagegallery', uid)\n        .then((document) => {\n          if (document) {\n            this.documentId = document.id\n            this.fields.title = document.data.title\n            this.fields.description = document.data.description\n            this.fields.ctaLink = document.data.cta_link\n            this.fields.ctaText = document.data.cta_text\n            this.fields.icon = document.data.icon\n          } else {\n            this.$router.push({ name: 'not-found' })\n          }\n        })\n    }\n  },\n  created () {\n    this.getContent(this.$route.params.uid)\n  },\n  beforeRouteUpdate (to, from, next) {\n    this.getContent(to.params.uid)\n    next()\n  }\n}\n",{"version":3,"sources":["Imagegallery.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Imagegallery.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"wrapper\">\n    <prismic-edit-button :documentId=\"documentId\"/>\n    <h1 class=\"title\">\n      {{ $prismic.richTextAsPlain(fields.title) }}\n    </h1>\n    <prismic-rich-text :field=\"fields.description\" class=\"description\"/>\n    <div class=\"cta-wrapper\">\n      <prismic-link :field=\"fields.ctaLink\" class=\"cta\">\n        {{ $prismic.richTextAsPlain(fields.ctaText) }}\n      </prismic-link>\n    </div>\n    <div class=\"icon-wrapper\">\n      <prismic-image :field=\"fields.icon\" class=\"icon\"/>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'Imagegallery',\n  data () {\n    return {\n      documentId: '',\n      fields: {\n        title: null,\n        description: null,\n        ctaLink: null,\n        ctaText: null,\n        icon: null\n      }\n    }\n  },\n  methods: {\n    getContent (uid) {\n      this.$prismic.client.getByUID('imagegallery', uid)\n        .then((document) => {\n          if (document) {\n            this.documentId = document.id\n            this.fields.title = document.data.title\n            this.fields.description = document.data.description\n            this.fields.ctaLink = document.data.cta_link\n            this.fields.ctaText = document.data.cta_text\n            this.fields.icon = document.data.icon\n          } else {\n            this.$router.push({ name: 'not-found' })\n          }\n        })\n    }\n  },\n  created () {\n    this.getContent(this.$route.params.uid)\n  },\n  beforeRouteUpdate (to, from, next) {\n    this.getContent(to.params.uid)\n    next()\n  }\n}\n</script>\n\n<style>\n.wrapper {\n  max-width: 820px;\n  margin-left: auto;\n  margin-right: auto;\n  padding: 40px 10px;\n  font-family: Avenir, \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n}\n\n.title {\n  font-size: 32px;\n}\n\n.description {\n  margin-top: 40px;\n}\n\n.description h2 {\n  font-size: 24px;\n}\n\n.description h2:not(:first-child) {\n  margin-top: 20px;\n}\n\n.description p {\n  line-height: 1.5;\n}\n\n.description p:not(:first-child) {\n  margin-top: 10px;\n}\n\n.description a {\n  color: #404e9f;\n}\n\n.description a:hover {\n  text-decoration: underline;\n}\n\n.cta-wrapper {\n  margin-top: 40px;\n}\n\n.cta {\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  height: 40px;\n  padding: 0 20px;\n  background-color: #404e9f;\n  color: white;\n}\n\n.icon-wrapper {\n  margin-top: 40px;\n}\n\n.icon {\n  max-width: 100%;\n}\n</style>"]}]}