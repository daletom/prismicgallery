{"remainingRequest":"/Users/tom/Documents/vuejs-starter/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/tom/Documents/vuejs-starter/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/tom/Documents/vuejs-starter/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tom/Documents/vuejs-starter/src/views/Tutorial.vue?vue&type=template&id=583ede98&","dependencies":[{"path":"/Users/tom/Documents/vuejs-starter/src/views/Tutorial.vue","mtime":1565119069770},{"path":"/Users/tom/Documents/vuejs-starter/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tom/Documents/vuejs-starter/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/tom/Documents/vuejs-starter/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tom/Documents/vuejs-starter/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { attrs: { id: \"prismic-tutorial\" } }, [\n    _vm._m(0),\n    _c(\"section\", [\n      _c(\"p\", [\n        _vm._v(\n          \"This is a tutorial page included in this Vue.js starter project, it has a few useful links and example code snippets to help you get started.\"\n        )\n      ]),\n      _vm._m(1),\n      _c(\"h2\", [_vm._v(\"Follow these 5 simple steps\")]),\n      _vm._m(2),\n      _c(\"h4\", [_vm._v(\"Create a Prismic content repository\")]),\n      _vm._m(3),\n      _c(\"h4\", [_vm._v(\"Configure your project\")]),\n      _c(\"p\", [\n        _vm._v(\n          \"Open the index.html file and define the API endpoint of your Prismic repository:\"\n        )\n      ]),\n      _c(\n        \"pre\",\n        {\n          directives: [{ name: \"highlightjs\", rawName: \"v-highlightjs\" }],\n          staticClass: \"source-code\"\n        },\n        [\n          _c(\"code\", { staticClass: \"xml\" }, [\n            _vm._v(\n              \"<!-- In public/index.html -->\\n\\n<script>\\n  window.prismic = {\\n    endpoint: 'https://your-repo-name.prismic.io/api/v2'\\n  }\\n</script>\\n\"\n            )\n          ])\n        ]\n      ),\n      _c(\"p\", [\n        _vm._v(\n          \"Next let’s see how to create a Vue component filled with content retrieved from Prismic.\"\n        )\n      ]),\n      _vm._m(4),\n      _c(\"p\", [\n        _vm._v(\n          \"We’ll create a document containing a title, a description, a call to action and an icon. Let’s create a Custom Type in Prismic with the corresponding fields. We’ll add an additional UID field (unique identifier) for querying the document.\"\n        )\n      ]),\n      _vm._m(5),\n      _vm._m(6),\n      _vm._m(7),\n      _c(\n        \"pre\",\n        {\n          directives: [{ name: \"highlightjs\", rawName: \"v-highlightjs\" }],\n          staticClass: \"source-code\"\n        },\n        [\n          _c(\"code\", { staticClass: \"json\" }, [\n            _vm._v(\n              '{\\n  \"Main\": {\\n    \"uid\": {\\n      \"type\": \"UID\",\\n      \"config\": {\\n        \"placeholder\": \"UID...\",\\n        \"label\": \"UID\"\\n      }\\n    },\\n    \"title\": {\\n      \"type\": \"StructuredText\",\\n      \"config\": {\\n        \"single\": \"heading1\",\\n        \"label\": \"Title\",\\n        \"placeholder\": \"Title...\"\\n      }\\n    },\\n    \"description\": {\\n      \"type\": \"StructuredText\",\\n      \"config\": {\\n        \"multi\": \"paragraph, heading2, strong, em, hyperlink\",\\n        \"allowTargetBlank\": true,\\n        \"label\": \"Description\",\\n        \"placeholder\": \"Description...\"\\n      }\\n    },\\n    \"cta_link\": {\\n      \"type\": \"Link\",\\n      \"config\": {\\n        \"allowTargetBlank\": true,\\n        \"label\": \"CTA link\",\\n        \"placeholder\": \"CTA link...\"\\n      }\\n    },\\n    \"cta_text\": {\\n      \"type\": \"StructuredText\",\\n      \"config\": {\\n        \"single\": \"paragraph\",\\n        \"label\": \"CTA text\",\\n        \"placeholder\": \"CTA text...\"\\n      }\\n    },\\n    \"icon\": {\\n      \"type\": \"Image\"\\n    }\\n  }\\n}\\n'\n            )\n          ])\n        ]\n      ),\n      _vm._m(8),\n      _c(\"p\", [\n        _vm._v(\n          'Now it is time to fill in and publish your first \"Page\" document in your Prismic repository.'\n        )\n      ]),\n      _vm._m(9),\n      _vm._m(10),\n      _vm._m(11),\n      _c(\"h4\", [_vm._v(\"Create a component that retrieves your content\")]),\n      _c(\"p\", [\n        _vm._v(\n          \"Let’s create a Vue component that will display content fetched from the Prismic API.\"\n        )\n      ]),\n      _c(\"p\", [\n        _vm._v(\n          'Go back to your local code and create a new Vue component file named \"Page.vue\" inside the views folder (src/views/Page.vue).  We’ll make an API call to retrieve the document content, querying it by specifying its UID.'\n        )\n      ]),\n      _c(\"p\", [\n        _vm._v(\n          'Here’s an example that’ll render a \"Page\" document with its title, description, call to action and icon:'\n        )\n      ]),\n      _c(\n        \"pre\",\n        {\n          directives: [{ name: \"highlightjs\", rawName: \"v-highlightjs\" }],\n          staticClass: \"source-code\"\n        },\n        [\n          _c(\"code\", { staticClass: \"xml\" }, [\n            _vm._v(\n              '<!-- Create file src/views/Page.vue -->\\n\\n<template>\\n  <div class=\"wrapper\">\\n    <prismic-edit-button :documentId=\"documentId\"/>\\n    <h1 class=\"title\">\\n      ' +\n                _vm._s(\"{{ $prismic.richTextAsPlain(fields.title) }}\") +\n                '\\n    </h1>\\n    <prismic-rich-text :field=\"fields.description\" class=\"description\"/>\\n    <div class=\"cta-wrapper\">\\n      <prismic-link :field=\"fields.ctaLink\" class=\"cta\">\\n        ' +\n                _vm._s(\"{{ $prismic.richTextAsPlain(fields.ctaText) }}\") +\n                \"\\n      </prismic-link>\\n    </div>\\n    <div class=\\\"icon-wrapper\\\">\\n      <prismic-image :field=\\\"fields.icon\\\" class=\\\"icon\\\"/>\\n    </div>\\n  </div>\\n</template>\\n\\n<script>\\nexport default {\\n  name: 'Page',\\n  data () {\\n    return {\\n      documentId: '',\\n      fields: {\\n        title: null,\\n        description: null,\\n        ctaLink: null,\\n        ctaText: null,\\n        icon: null\\n      }\\n    }\\n  },\\n  methods: {\\n    getContent (uid) {\\n      this.$prismic.client.getByUID('page', uid)\\n        .then((document) => {\\n          if (document) {\\n            this.documentId = document.id\\n            this.fields.title = document.data.title\\n            this.fields.description = document.data.description\\n            this.fields.ctaLink = document.data.cta_link\\n            this.fields.ctaText = document.data.cta_text\\n            this.fields.icon = document.data.icon\\n          } else {\\n            this.$router.push({ name: 'not-found' })\\n          }\\n        })\\n    }\\n  },\\n  created () {\\n    this.getContent(this.$route.params.uid)\\n  },\\n  beforeRouteUpdate (to, from, next) {\\n    this.getContent(to.params.uid)\\n    next()\\n  }\\n}\\n</script>\\n\\n<style>\\n.wrapper {\\n  max-width: 820px;\\n  margin-left: auto;\\n  margin-right: auto;\\n  padding: 40px 10px;\\n  font-family: Avenir, \\\"Helvetica Neue\\\", Helvetica, Arial, sans-serif;\\n}\\n\\n.title {\\n  font-size: 32px;\\n}\\n\\n.description {\\n  margin-top: 40px;\\n}\\n\\n.description h2 {\\n  font-size: 24px;\\n}\\n\\n.description h2:not(:first-child) {\\n  margin-top: 20px;\\n}\\n\\n.description p {\\n  line-height: 1.5;\\n}\\n\\n.description p:not(:first-child) {\\n  margin-top: 10px;\\n}\\n\\n.description a {\\n  color: #404e9f;\\n}\\n\\n.description a:hover {\\n  text-decoration: underline;\\n}\\n\\n.cta-wrapper {\\n  margin-top: 40px;\\n}\\n\\n.cta {\\n  display: inline-flex;\\n  justify-content: center;\\n  align-items: center;\\n  height: 40px;\\n  padding: 0 20px;\\n  background-color: #404e9f;\\n  color: white;\\n}\\n\\n.icon-wrapper {\\n  margin-top: 40px;\\n}\\n\\n.icon {\\n  max-width: 100%;\\n}\\n</style>\\n\"\n            )\n          ])\n        ]\n      ),\n      _c(\"h4\", [_vm._v(\"Specify a route for the Page component\")]),\n      _c(\"p\", [\n        _vm._v(\n          \"Now that you’ve created your Page component, add the following route to the Vue Router, in src/router.js file:\"\n        )\n      ]),\n      _c(\n        \"pre\",\n        {\n          directives: [{ name: \"highlightjs\", rawName: \"v-highlightjs\" }],\n          staticClass: \"source-code\"\n        },\n        [\n          _c(\"code\", { staticClass: \"javascript\" }, [\n            _vm._v(\n              \"// In src/router.js\\n\\n// ...\\n\\nimport Page from './views/Page.vue'\\n\\n// ...\\n\\n{\\n  path: '/page/:uid',\\n  name: 'page',\\n  component: Page\\n},\\n\\n// ...\\n\"\n            )\n          ])\n        ]\n      ),\n      _vm._m(12),\n      _vm._m(13),\n      _c(\"p\", [_vm._v(\"Sit back and enjoy the result.\")]),\n      _c(\"p\", [\n        _vm._v(\n          \"Basically in these few steps you’ve added content management to your Vue.js project and thanks to Prismic, you’ll have:\"\n        )\n      ]),\n      _vm._m(14)\n    ])\n  ])\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"header\", [\n      _c(\"nav\", [\n        _c(\"a\", { attrs: { href: \"#bootstrap\" } }, [\n          _c(\"strong\", [_vm._v(\"Configure a repository\")])\n        ]),\n        _c(\n          \"a\",\n          {\n            staticClass: \"doc\",\n            attrs: {\n              href: \"https://prismic.io/docs/vuejs\",\n              target: \"_blank\",\n              rel: \"noopener\"\n            }\n          },\n          [\n            _vm._v(\"Documentation\"),\n            _c(\"img\", {\n              attrs: {\n                src: require(\"../assets/img/tutorial/open.svg\"),\n                alt: \"Open\"\n              }\n            })\n          ]\n        )\n      ]),\n      _c(\"div\", { staticClass: \"wrapper\" }, [\n        _c(\"img\", {\n          attrs: {\n            src: require(\"../assets/img/tutorial/rocket.svg\"),\n            alt: \"Rocket\"\n          }\n        }),\n        _c(\"h1\", [_vm._v(\"High five, you deserve it!\")]),\n        _c(\"p\", [\n          _vm._v(\n            \"Grab a well deserved cup of coffee, you’re just a few steps away from creating a Vue.js component with content managed in Prismic.\"\n          )\n        ])\n      ]),\n      _c(\"div\", { staticClass: \"hero-curve\" }),\n      _c(\"div\", { staticClass: \"flip-flap\" }, [\n        _c(\"div\", { staticClass: \"flipper\" }, [\n          _c(\"div\", { staticClass: \"guide\" }, [\n            _c(\"ul\", [\n              _c(\"li\", [\n                _c(\"a\", { attrs: { href: \"#bootstrap\" } }, [\n                  _c(\"span\", [_vm._v(\"1\")]),\n                  _vm._v(\"Bootstrap your project\"),\n                  _c(\"img\", {\n                    attrs: {\n                      src: require(\"../assets/img/tutorial/chevron.svg\"),\n                      alt: \"Chevron down\"\n                    }\n                  })\n                ])\n              ]),\n              _c(\"li\", [\n                _c(\"a\", { attrs: { href: \"#custom-type\" } }, [\n                  _c(\"span\", [_vm._v(\"2\")]),\n                  _vm._v('Create a Custom Type \"Page\"'),\n                  _c(\"img\", {\n                    attrs: {\n                      src: require(\"../assets/img/tutorial/chevron.svg\"),\n                      alt: \"Chevron down\"\n                    }\n                  })\n                ])\n              ]),\n              _c(\"li\", [\n                _c(\"a\", { attrs: { href: \"#new-document\" } }, [\n                  _c(\"span\", [_vm._v(\"3\")]),\n                  _vm._v('Publish your first \"Page\" document'),\n                  _c(\"img\", {\n                    attrs: {\n                      src: require(\"../assets/img/tutorial/chevron.svg\"),\n                      alt: \"Chevron down\"\n                    }\n                  })\n                ])\n              ]),\n              _c(\"li\", [\n                _c(\"a\", { attrs: { href: \"#code\" } }, [\n                  _c(\"span\", [_vm._v(\"4\")]),\n                  _vm._v(\"Query the API in your Vue component\"),\n                  _c(\"img\", {\n                    attrs: {\n                      src: require(\"../assets/img/tutorial/chevron.svg\"),\n                      alt: \"Chevron down\"\n                    }\n                  })\n                ])\n              ]),\n              _c(\"li\", [\n                _c(\"a\", { attrs: { href: \"#done\" } }, [\n                  _c(\"span\", [_vm._v(\"5\")]),\n                  _vm._v(\"Well done!\"),\n                  _c(\"img\", {\n                    attrs: {\n                      src: require(\"../assets/img/tutorial/chevron.svg\"),\n                      alt: \"Chevron down\"\n                    }\n                  })\n                ])\n              ])\n            ])\n          ]),\n          _c(\"div\", { staticClass: \"gif\" })\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"You can access this very tutorial page at \"),\n      _c(\"a\", { attrs: { href: \"http://localhost:8080/tutorial\" } }, [\n        _vm._v(\"http://localhost:8080/tutorial\")\n      ]),\n      _vm._v(\".\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h3\", { attrs: { id: \"bootstrap\" } }, [\n      _c(\"span\", [_vm._v(\"1\")]),\n      _vm._v(\"Bootstrap your project\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"A repository is where your website’s content will live. Simply \"),\n      _c(\n        \"a\",\n        {\n          attrs: {\n            href: \"https://prismic.io/#create\",\n            target: \"_blank\",\n            rel: \"noopener\"\n          }\n        },\n        [_vm._v(\"create one\")]\n      ),\n      _vm._v(\n        \" choosing a repository name and a plan. We’ve got a variety of plans including our favorite: Free!\"\n      )\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h3\", { attrs: { id: \"custom-type\" } }, [\n      _c(\"span\", [_vm._v(\"2\")]),\n      _vm._v('Create a Custom Type \"Page\"')\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\n        \"Go to the Web interface of the Prismic repository you’ve just created (at https://your-repo-name.prismic.io). Then navigate to the \"\n      ),\n      _c(\"em\", [_vm._v('\"Custom Types\"')]),\n      _vm._v(\n        ' section (icon on the left navbar) and create a new Repeatable Type, for this tutorial let’s name it \"Page\", so that its API ID will be set to '\n      ),\n      _c(\"strong\", [_vm._v('\"page\"')]),\n      _vm._v(\".\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\n        'Once the \"Page\" Custom Type is created, we have to define how we want to model it, that is to say a document containing a UID field, a rich text field for the title, a rich text field for the description, a link field + a rich text field for the call to action and an image field for the icon. Click on '\n      ),\n      _c(\"em\", [_vm._v('\"JSON editor\"')]),\n      _vm._v(\" (right sidebar) and paste in the following JSON data.\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"When you’re done, hit \"),\n      _c(\"em\", [_vm._v('\"Save\"')]),\n      _vm._v(\".\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h3\", { attrs: { id: \"new-document\" } }, [\n      _c(\"span\", [_vm._v(\"3\")]),\n      _vm._v('Publish your first \"Page\" document')\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\n        '\\n        Create a new \"Page\" document in your repository: go to '\n      ),\n      _c(\"em\", [_vm._v('\"Content\"')]),\n      _vm._v(\" and hit \"),\n      _c(\"em\", [_vm._v('\"New\"')]),\n      _vm._v(\n        \".\\n        Fill the corresponding fields. Note the value you filled in the UID field, because it will be a part of the component route path, for this tutorial let’s put \"\n      ),\n      _c(\"strong\", [_vm._v('\"quickstart\"')]),\n      _vm._v(\".\\n      \")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"When you’re done, hit \"),\n      _c(\"em\", [_vm._v('\"Save\"')]),\n      _vm._v(\" then \"),\n      _c(\"em\", [_vm._v('\"Publish\"')]),\n      _vm._v(\".\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h3\", { attrs: { id: \"code\" } }, [\n      _c(\"span\", [_vm._v(\"4\")]),\n      _vm._v(\"Query the API in your Vue component\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"In your browser go to \"),\n      _c(\n        \"a\",\n        {\n          attrs: {\n            href: \"http://localhost:8080/page/quickstart\",\n            target: \"_blank\",\n            rel: \"noopener\"\n          }\n        },\n        [_vm._v(\"http://localhost:8080/page/quickstart\")]\n      ),\n      _c(\"em\", [_vm._v(\" and voilà!\")]),\n      _vm._v(\n        \" You’ve officially created a Vue component that pulls content from Prismic.\"\n      )\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h3\", { attrs: { id: \"done\" } }, [\n      _c(\"span\", [_vm._v(\"5\")]),\n      _vm._v(\"Well done!\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\n      \"ol\",\n      { staticStyle: { \"list-style-type\": \"disc\", \"padding-left\": \"20px\" } },\n      [\n        _c(\"li\", [_vm._v(\"Full versioning of your content\")]),\n        _c(\"li\", [\n          _vm._v(\"A nice rich editor to create and edit your content\")\n        ]),\n        _c(\"li\", [\n          _vm._v(\n            \"Collaboration with other users you choose to add to your repository\"\n          )\n        ]),\n        _c(\"li\", [\n          _vm._v(\n            \"Performance and scalability for your content using a Content Delivery Network around the world\"\n          )\n        ])\n      ]\n    )\n  }\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}