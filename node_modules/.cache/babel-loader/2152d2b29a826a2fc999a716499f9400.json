{"remainingRequest":"/Users/tom/Documents/vuejs-starter/node_modules/babel-loader/lib/index.js!/Users/tom/Documents/vuejs-starter/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/tom/Documents/vuejs-starter/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tom/Documents/vuejs-starter/src/views/Page.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/tom/Documents/vuejs-starter/src/views/Page.vue","mtime":1565122647154},{"path":"/Users/tom/Documents/vuejs-starter/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tom/Documents/vuejs-starter/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/tom/Documents/vuejs-starter/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tom/Documents/vuejs-starter/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: 'Page',\n  data: function data() {\n    return {\n      documentId: '',\n      fields: {\n        title: null,\n        description: null,\n        ctaLink: null,\n        ctaText: null,\n        icon: null\n      }\n    };\n  },\n  methods: {\n    getContent: function getContent(uid) {\n      var _this = this;\n\n      this.$prismic.client.getByUID('page', uid).then(function (document) {\n        if (document) {\n          _this.documentId = document.id;\n          _this.fields.title = document.data.title;\n          _this.fields.description = document.data.description;\n          _this.fields.ctaLink = document.data.cta_link;\n          _this.fields.ctaText = document.data.cta_text;\n          _this.fields.icon = document.data.icon;\n        } else {\n          _this.$router.push({\n            name: 'not-found'\n          });\n        }\n      });\n    }\n  },\n  created: function created() {\n    this.getContent(this.$route.params.uid);\n  },\n  beforeRouteUpdate: function beforeRouteUpdate(to, from, next) {\n    this.getContent(to.params.uid);\n    next();\n  }\n};",{"version":3,"sources":["Page.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAmBA,eAAA;AACA,EAAA,IAAA,EAAA,MADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,UAAA,EAAA,EADA;AAEA,MAAA,MAAA,EAAA;AACA,QAAA,KAAA,EAAA,IADA;AAEA,QAAA,WAAA,EAAA,IAFA;AAGA,QAAA,OAAA,EAAA,IAHA;AAIA,QAAA,OAAA,EAAA,IAJA;AAKA,QAAA,IAAA,EAAA;AALA;AAFA,KAAA;AAUA,GAbA;AAcA,EAAA,OAAA,EAAA;AACA,IAAA,UADA,sBACA,GADA,EACA;AAAA;;AACA,WAAA,QAAA,CAAA,MAAA,CAAA,QAAA,CAAA,MAAA,EAAA,GAAA,EACA,IADA,CACA,UAAA,QAAA,EAAA;AACA,YAAA,QAAA,EAAA;AACA,UAAA,KAAA,CAAA,UAAA,GAAA,QAAA,CAAA,EAAA;AACA,UAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,QAAA,CAAA,IAAA,CAAA,KAAA;AACA,UAAA,KAAA,CAAA,MAAA,CAAA,WAAA,GAAA,QAAA,CAAA,IAAA,CAAA,WAAA;AACA,UAAA,KAAA,CAAA,MAAA,CAAA,OAAA,GAAA,QAAA,CAAA,IAAA,CAAA,QAAA;AACA,UAAA,KAAA,CAAA,MAAA,CAAA,OAAA,GAAA,QAAA,CAAA,IAAA,CAAA,QAAA;AACA,UAAA,KAAA,CAAA,MAAA,CAAA,IAAA,GAAA,QAAA,CAAA,IAAA,CAAA,IAAA;AACA,SAPA,MAOA;AACA,UAAA,KAAA,CAAA,OAAA,CAAA,IAAA,CAAA;AAAA,YAAA,IAAA,EAAA;AAAA,WAAA;AACA;AACA,OAZA;AAaA;AAfA,GAdA;AA+BA,EAAA,OA/BA,qBA+BA;AACA,SAAA,UAAA,CAAA,KAAA,MAAA,CAAA,MAAA,CAAA,GAAA;AACA,GAjCA;AAkCA,EAAA,iBAlCA,6BAkCA,EAlCA,EAkCA,IAlCA,EAkCA,IAlCA,EAkCA;AACA,SAAA,UAAA,CAAA,EAAA,CAAA,MAAA,CAAA,GAAA;AACA,IAAA,IAAA;AACA;AArCA,CAAA","sourcesContent":["<template>\n  <div class=\"wrapper\">\n    <prismic-edit-button :documentId=\"documentId\"/>\n    <h1 class=\"title\">\n      {{ $prismic.richTextAsPlain(fields.title) }}\n    </h1>\n    <prismic-rich-text :field=\"fields.description\" class=\"description\"/>\n    <div class=\"cta-wrapper\">\n      <prismic-link :field=\"fields.ctaLink\" class=\"cta\">\n        {{ $prismic.richTextAsPlain(fields.ctaText) }}\n      </prismic-link>\n    </div>\n    <div class=\"icon-wrapper\">\n      <prismic-image :field=\"fields.icon\" class=\"icon\"/>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'Page',\n  data () {\n    return {\n      documentId: '',\n      fields: {\n        title: null,\n        description: null,\n        ctaLink: null,\n        ctaText: null,\n        icon: null\n      }\n    }\n  },\n  methods: {\n    getContent (uid) {\n      this.$prismic.client.getByUID('page', uid)\n        .then((document) => {\n          if (document) {\n            this.documentId = document.id\n            this.fields.title = document.data.title\n            this.fields.description = document.data.description\n            this.fields.ctaLink = document.data.cta_link\n            this.fields.ctaText = document.data.cta_text\n            this.fields.icon = document.data.icon\n          } else {\n            this.$router.push({ name: 'not-found' })\n          }\n        })\n    }\n  },\n  created () {\n    this.getContent(this.$route.params.uid)\n  },\n  beforeRouteUpdate (to, from, next) {\n    this.getContent(to.params.uid)\n    next()\n  }\n}\n</script>\n\n<style>\n.wrapper {\n  max-width: 820px;\n  margin-left: auto;\n  margin-right: auto;\n  padding: 40px 10px;\n  font-family: Avenir, \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n}\n\n.title {\n  font-size: 32px;\n}\n\n.description {\n  margin-top: 40px;\n}\n\n.description h2 {\n  font-size: 24px;\n}\n\n.description h2:not(:first-child) {\n  margin-top: 20px;\n}\n\n.description p {\n  line-height: 1.5;\n}\n\n.description p:not(:first-child) {\n  margin-top: 10px;\n}\n\n.description a {\n  color: #404e9f;\n}\n\n.description a:hover {\n  text-decoration: underline;\n}\n\n.cta-wrapper {\n  margin-top: 40px;\n}\n\n.cta {\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  height: 40px;\n  padding: 0 20px;\n  background-color: #404e9f;\n  color: white;\n}\n\n.icon-wrapper {\n  margin-top: 40px;\n}\n\n.icon {\n  max-width: 100%;\n}\n</style>"],"sourceRoot":"src/views"}]}